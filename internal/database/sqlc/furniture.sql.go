// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: furniture.sql

package database

import (
	"context"
)

const createFurniture = `-- name: CreateFurniture :exec
INSERT INTO furnitures (
    id, brand, size, material, product_shop
) VALUES (?, ?, ?, ?, ?)
`

type CreateFurnitureParams struct {
	ID          string
	Brand       string
	Size        string
	Material    string
	ProductShop string
}

func (q *Queries) CreateFurniture(ctx context.Context, arg CreateFurnitureParams) error {
	_, err := q.db.ExecContext(ctx, createFurniture,
		arg.ID,
		arg.Brand,
		arg.Size,
		arg.Material,
		arg.ProductShop,
	)
	return err
}

const getFurnitureByID = `-- name: GetFurnitureByID :one
SELECT id, brand, product_shop, created_at, updated_at, size, material FROM furnitures WHERE id = ?
`

func (q *Queries) GetFurnitureByID(ctx context.Context, id string) (Furniture, error) {
	row := q.db.QueryRowContext(ctx, getFurnitureByID, id)
	var i Furniture
	err := row.Scan(
		&i.ID,
		&i.Brand,
		&i.ProductShop,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Size,
		&i.Material,
	)
	return i, err
}
