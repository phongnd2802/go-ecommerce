// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: electronic.sql

package database

import (
	"context"
)

const createElectronic = `-- name: CreateElectronic :exec
INSERT INTO electronics (
    id, manufacturer, model, color, product_shop
) VALUES (?, ?, ?, ?, ?)
`

type CreateElectronicParams struct {
	ID           string
	Manufacturer string
	Model        string
	Color        string
	ProductShop  string
}

func (q *Queries) CreateElectronic(ctx context.Context, arg CreateElectronicParams) error {
	_, err := q.db.ExecContext(ctx, createElectronic,
		arg.ID,
		arg.Manufacturer,
		arg.Model,
		arg.Color,
		arg.ProductShop,
	)
	return err
}

const getElectronicByID = `-- name: GetElectronicByID :one
SELECT id, manufacturer, product_shop, created_at, updated_at, model, color FROM electronics WHERE id = ?
`

func (q *Queries) GetElectronicByID(ctx context.Context, id string) (Electronic, error) {
	row := q.db.QueryRowContext(ctx, getElectronicByID, id)
	var i Electronic
	err := row.Scan(
		&i.ID,
		&i.Manufacturer,
		&i.ProductShop,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Model,
		&i.Color,
	)
	return i, err
}
