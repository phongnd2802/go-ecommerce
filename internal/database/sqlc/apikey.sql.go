// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: apikey.sql

package database

import (
	"context"
)

const createApiKey = `-- name: CreateApiKey :exec
INSERT INTO api_keys (
    akey,
    permissions
) VALUES (
    ?, ?
)
`

type CreateApiKeyParams struct {
	Akey        string
	Permissions string
}

func (q *Queries) CreateApiKey(ctx context.Context, arg CreateApiKeyParams) error {
	_, err := q.db.ExecContext(ctx, createApiKey, arg.Akey, arg.Permissions)
	return err
}

const getApiKey = `-- name: GetApiKey :one
SELECT id, akey, status, permissions FROM api_keys
WHERE akey = ?
`

func (q *Queries) GetApiKey(ctx context.Context, akey string) (ApiKey, error) {
	row := q.db.QueryRowContext(ctx, getApiKey, akey)
	var i ApiKey
	err := row.Scan(
		&i.ID,
		&i.Akey,
		&i.Status,
		&i.Permissions,
	)
	return i, err
}
